{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/Udemy/React/crwn-clothing/client/src/pages/collection/collection.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './collection.styles';\nimport { firestore } from 'firebase'; // then pass match params to selectors \n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const {\n    title,\n    items\n  } = collection;\n  return /*#__PURE__*/React.createElement(CollectionPageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CollectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, title), /*#__PURE__*/React.createElement(CollectionItemsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }))));\n}; // using the component props by 'ownProps'\n// needs a part of the state depending on the URL parameter\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/client/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","CollectionItem","selectCollection","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","firestore","CollectionPage","collection","unsubscribeFromCollections","onSnapshot","snapshot","console","log","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,qBAJP;AAKA,SAASC,SAAT,QAA0B,UAA1B,C,CAEA;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,0BAA0B,GAAGH,SAAS,CACzCE,UADgC,CACrB,aADqB,EAEhCE,UAFgC,CAErBC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAFS,CAAnC;AAIA,WAAO,MAAM;AACXF,MAAAA,0BAA0B;AAC3B,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AAUA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBP,UAAzB;AACA,sBACA,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBM,KAAlB,CADF,eAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADA;AAUD,CAtBD,C,CAwBA;AACA;;;AACA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cb,EAAAA,UAAU,EAAEN,gBAAgB,CAACmB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styles';\nimport { firestore } from 'firebase';\n\n// then pass match params to selectors \nconst CollectionPage = ({ collection }) => {\n  useEffect(() => {\n    const unsubscribeFromCollections = firestore\n      .collection('collections')\n      .onSnapshot(snapshot => console.log(snapshot));\n\n    return () => {\n      unsubscribeFromCollections();\n    };\n  }, []);\n\n  const { title, items } = collection;\n  return (\n  <CollectionPageContainer>\n    <CollectionTitle>{title}</CollectionTitle>\n    <CollectionItemsContainer>\n      {items.map(item => (\n        <CollectionItem key={item.id} item={item} />\n      ))}\n    </CollectionItemsContainer>\n  </CollectionPageContainer>\n  );\n};\n\n// using the component props by 'ownProps'\n// needs a part of the state depending on the URL parameter\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}