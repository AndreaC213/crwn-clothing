{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/Udemy/React/crwn-clothing/client/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport Spinner from '../../components/spinner/spinner.component';\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/collections-overview.container'));\nconst CollectionPageContainer = lazy(() => import('../collection/collection.container')); // update shopPage as non-connect component\n// will create child component of the shopPage be connected\n// get the current path by passing 'match' the former path as props\n// using categoryId as parameter for path\n// invert 'isCollectionsLoaded' to get the correct isLoading State\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(ShopPageContaine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","lazy","Suspense","Route","connect","fetchCollectionsStart","Spinner","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAgD,OAAhD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AAEA,MAAMC,4BAA4B,GAAGN,IAAI,CAAC,MACxC,OAAO,sEAAP,CADuC,CAAzC;AAIA,MAAMO,uBAAuB,GAAGP,IAAI,CAAC,MACnC,OAAO,oCAAP,CADkC,CAApC,C,CAIA;AACA;AACA;AACA;AACA;;AACA,MAAMQ,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,qBAAF;AAAyBK,EAAAA;AAAzB,CAAD,KAAsC;AACnDV,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,qBAAqB;AACxB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,sBACA,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACA,IAAA,KAAK,MADL;AAEA,IAAA,IAAI,EAAG,GAAEK,KAAK,CAACC,IAAK,EAFpB;AAGA,IAAA,SAAS,EAAEJ,4BAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,KAAD;AACA,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADpB;AAEA,IAAA,SAAS,EAAEH,uBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CADA;AAeH,CApBD;;AAsBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCR,EAAAA,qBAAqB,EAAE,MAAMQ,QAAQ,CAACR,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect, lazy, Suspense }from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\n\nimport Spinner from '../../components/spinner/spinner.component';\n\nconst CollectionsOverviewContainer = lazy(() =>\n  import('../../components/collections-overview/collections-overview.container')\n);\n\nconst CollectionPageContainer = lazy(() =>\n  import('../collection/collection.container')\n);\n\n// update shopPage as non-connect component\n// will create child component of the shopPage be connected\n// get the current path by passing 'match' the former path as props\n// using categoryId as parameter for path\n// invert 'isCollectionsLoaded' to get the correct isLoading State\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\n    useEffect(() => {\n        fetchCollectionsStart();\n    }, [fetchCollectionsStart]);\n    \n    return (\n    <ShopPageContaine>\n        <Suspense fallback={<Spinner />}>\n            <Route\n            exact\n            path={`${match.path}`}\n            component={CollectionsOverviewContainer}\n            />\n            <Route\n            path={`${match.path}/:collectionId`}\n            component={CollectionPageContainer}\n            />\n        </Suspense>\n    </ShopPageContaine>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}