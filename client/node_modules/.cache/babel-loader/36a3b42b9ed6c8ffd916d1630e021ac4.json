{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'; // also get local storage on window browser\n\nimport storage from 'redux-persist/lib/storage';\nimport directoryReducer from './directory/directory.reducer';\nimport shopReducer from './shop/shop.reducer';\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer'; // define new persist config\n// whitelist: contain the string name we want to store\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n}; // wrape it up with root reducer\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n}); // config by call {persistReducer}\n// get root reducer with the persistence capability\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","directoryReducer","shopReducer","userReducer","cartReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CAEA;AACA;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBN,EAAAA,OAFkB;AAGlBO,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHO,CAAtB,C,CAMA;;AACA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,IAAI,EAAEN,WAD0B;AAEhCO,EAAAA,IAAI,EAAEN,WAF0B;AAGhCO,EAAAA,SAAS,EAAEV,gBAHqB;AAIhCW,EAAAA,IAAI,EAAEV;AAJ0B,CAAD,CAAnC,C,CAOA;AACA;;AACA,eAAeH,cAAc,CAACM,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'\n// also get local storage on window browser\nimport storage from 'redux-persist/lib/storage';\nimport directoryReducer from './directory/directory.reducer';\nimport shopReducer from './shop/shop.reducer';\n\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\n\n// define new persist config\n// whitelist: contain the string name we want to store\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['cart']\n}\n\n// wrape it up with root reducer\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer\n});\n\n// config by call {persistReducer}\n// get root reducer with the persistence capability\nexport default persistReducer(persistConfig, rootReducer);"]},"metadata":{},"sourceType":"module"}