{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\nimport { GlobalStyle } from './global.styles';\nimport { selectCurrentUser } from './redux/user/user.selectors'; // how do we confirm the access by google sign in\n// function -> class to acess state\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  // Get persistence of our user section\n  // get promise from auth by using 'createUserProfileDocument' from firebase\n  componentDidMount() {} // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   if (userAuth) {\n  //     // if user not in firestore create one then return userRef\n  //     const userRef = await createUserProfileDocument(userAuth);\n  //     // subscribe to this userRef\n  //     // then set state for current user by using onSnapshop and .data() and\n  //     // 'action.js'\n  //     userRef.onSnapshot(snapShot => {\n  //       setCurrentUser({\n  //           id: snapShot.id,\n  //           ...snapShot.data()\n  //       });\n  //     });\n  //   }\n  //   // log out \n  //   else {\n  //     setCurrentUser(userAuth);\n  //   };\n  // });\n  // want to sign out -> get this subscribe unmount\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  } // pass current state as a property\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // getting current user form redux state\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","Header","GlobalStyle","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAuC,kBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AAGA,SAASC,iBAAT,QAAkC,6BAAlC,C,CAEA;AACA;;AACA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhC;AACA;AACAC,EAAAA,iBAAiB,GAAG,CAuBnB,CAvBgB,CAEf;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGF;;;AACAC,EAAAA,oBAAoB,GAAG;AACrB,SAAKF,mBAAL;AACD,GAjC+B,CAmChC;;;AACAG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEZ,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKU,KAAL,CAAWC,WAAX,gBACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gBAGE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAHF,CADF;AAsBD;;AA3D+B,C,CA+DlC;;;AACA,MAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Ce,EAAAA,WAAW,EAAER;AADkC,CAAD,CAAhD;AAIA,eAAeR,OAAO,CACpBiB,eADoB,CAAP,CACIR,GADJ,CAAf","sourcesContent":["import React from 'react';\nimport {Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\n\nimport { GlobalStyle } from './global.styles';\n\n\nimport { selectCurrentUser } from './redux/user/user.selectors';\n\n// how do we confirm the access by google sign in\n// function -> class to acess state\nclass App extends React.Component {\n  unsubscribeFromAuth = null\n\n  // Get persistence of our user section\n  // get promise from auth by using 'createUserProfileDocument' from firebase\n  componentDidMount() {\n\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if (userAuth) {\n\n    //     // if user not in firestore create one then return userRef\n    //     const userRef = await createUserProfileDocument(userAuth);\n\n    //     // subscribe to this userRef\n    //     // then set state for current user by using onSnapshop and .data() and\n    //     // 'action.js'\n    //     userRef.onSnapshot(snapShot => {\n    //       setCurrentUser({\n    //           id: snapShot.id,\n    //           ...snapShot.data()\n    //       });\n    //     });\n    //   }\n    //   // log out \n    //   else {\n    //     setCurrentUser(userAuth);\n    //   };\n    // });\n  }\n\n  // want to sign out -> get this subscribe unmount\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  // pass current state as a property\n  render() {\n    return (\n      <div>\n        <GlobalStyle/>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage}/>\n          <Route path='/shop' component={ShopPage}/>\n          <Route exact path='/checkout' component={CheckoutPage}/>\n          <Route \n            exact \n            path='/signin' \n            render={() => \n              this.props.currentUser ? (\n                <Redirect to='/' />\n              ) : (\n                <SignInAndSignUpPage/>\n              )\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n  \n}\n\n// getting current user form redux state\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\nexport default connect(\n  mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}