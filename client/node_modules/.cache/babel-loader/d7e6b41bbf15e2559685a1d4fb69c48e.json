{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart, fetchCollectionsSuccess } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.component'; // update shopPage as non-connect component\n// will create child component of the shopPage be connected\n// get the current path by passing 'match' the former path as props\n// using categoryId as parameter for path\n// invert 'isCollectionsLoaded' to get the correct isLoading State\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStart","fetchCollectionsSuccess","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,EAAgCC,uBAAhC,QAA+D,+BAA/D;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,qBAAF;AAAyBK,EAAAA;AAAzB,CAAD,KAAsC;AACnDR,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,qBAAqB;AACxB,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AACU,IAAA,IAAI,EAAG,GAAEK,KAAK,CAACC,IAAK,EAD9B;AAEI,IAAA,SAAS,EAAEJ,4BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADxB;AAEI,IAAA,SAAS,EAAEH,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAYH,CAjBD;;AAmBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCR,EAAAA,qBAAqB,EAAE,MAAMQ,QAAQ,CAACR,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect }from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStart, fetchCollectionsSuccess } from '../../redux/shop/shop.actions';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.component';\n\n// update shopPage as non-connect component\n// will create child component of the shopPage be connected\n// get the current path by passing 'match' the former path as props\n// using categoryId as parameter for path\n// invert 'isCollectionsLoaded' to get the correct isLoading State\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\n    useEffect(() => {\n        fetchCollectionsStart();\n    },[]);\n\n    return(\n        <div className='shop-page'>\n            <Route \n                exact path={`${match.path}`}  \n                component={CollectionsOverviewContainer}\n            />\n            <Route \n                path={`${match.path}/:collectionId`} \n                component={CollectionPageContainer}\n            />\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}