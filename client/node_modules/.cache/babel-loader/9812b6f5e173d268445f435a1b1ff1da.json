{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer'; // middleware is between reducer and action to interpret the actions  \n// then we dispatch the actions into store\n// store is between root-reducer and components\n// so we can pull value from the store to components by usind {provider} in 'index.js'\n// pass the middleware as an array to be scalable\n// 'logger' store prevState and nextState \n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // persist current store by using persistor as a provider\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,WAAW,GAAG,EAApB;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBP,MAAjB;AACD;;AAED,OAAO,MAAMQ,KAAK,GAAGV,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGI,WAAJ,CAA7B,CAAzB,C,CAEP;;AACA,OAAO,MAAMM,SAAS,GAAGR,YAAY,CAACO,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\n\nimport rootReducer from './root-reducer';\n\n// middleware is between reducer and action to interpret the actions  \n// then we dispatch the actions into store\n// store is between root-reducer and components\n// so we can pull value from the store to components by usind {provider} in 'index.js'\n\n// pass the middleware as an array to be scalable\n// 'logger' store prevState and nextState \nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// persist current store by using persistor as a provider\nexport const persistor = persistStore(store);\n \nexport default { store, persistor };\n\n\n"]},"metadata":{},"sourceType":"module"}