{"ast":null,"code":"import UserActionTypes from './user.types'; // Initial the state\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n}; // state would be redux store in whatever action pass in \n// userReducer with two objects 'state' and 'action'\n// clear the error if the action is successed\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  // check the action type\n  switch (action.type) {\n    case UserActionTypes.GOOGLE_SIGN_IN_SUCCESS:\n    case UserActionTypes.EMAIL_SIGN_IN_SUCCESS:\n      return { ...state,\n        currentUser: action.payload,\n        error: null\n      };\n\n    case UserActionTypes.GOOGLE_SIGN_IN_FAILURE:\n    case UserActionTypes.EMAIL_SIGN_IN_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","error","userReducer","state","action","type","GOOGLE_SIGN_IN_SUCCESS","EMAIL_SIGN_IN_SUCCESS","payload","GOOGLE_SIGN_IN_FAILURE","EMAIL_SIGN_IN_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,IADK;AAElBC,EAAAA,KAAK,EAAE;AAFW,CAAtB,C,CAKA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAEJ,aAAR,EAAuBK,MAAvB,KAAkC;AAElD;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,eAAe,CAACQ,sBAArB;AACA,SAAKR,eAAe,CAACS,qBAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACI,OAFjB;AAGHP,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKH,eAAe,CAACW,sBAArB;AACA,SAAKX,eAAe,CAACY,qBAArB;AACI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAFX,OAAP;;AAIJ;AACI,aAAOL,KAAP;AAfR;AAiBH,CApBD;;AAsBA,eAAeD,WAAf","sourcesContent":["import UserActionTypes from './user.types';\n\n// Initial the state\nconst INITIAL_STATE = {\n    currentUser: null, \n    error: null\n}\n\n// state would be redux store in whatever action pass in \n// userReducer with two objects 'state' and 'action'\n// clear the error if the action is successed\nconst userReducer = (state= INITIAL_STATE, action) => {\n\n    // check the action type\n    switch (action.type) {\n        case UserActionTypes.GOOGLE_SIGN_IN_SUCCESS:\n        case UserActionTypes.EMAIL_SIGN_IN_SUCCESS:\n            return {\n                ...state,\n                currentUser: action.payload,\n                error: null\n            };\n        case UserActionTypes.GOOGLE_SIGN_IN_FAILURE:\n        case UserActionTypes.EMAIL_SIGN_IN_FAILURE:\n            return {\n                ...state,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}