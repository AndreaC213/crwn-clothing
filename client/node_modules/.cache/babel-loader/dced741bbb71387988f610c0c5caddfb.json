{"ast":null,"code":"import UserActionTypes from './user.types'; // fire off the actions hold that snapShot object,\n// we used to store in our state at 'firebase.utils'\n// this action function '{ signInSuccess }' return objects\n// each object in the format that action expected it to be\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const signInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n}); // email have to take the password value user passed in\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n});\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n});\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\nexport const signOutFailure = error => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error\n}); // email have to take the password value user passed in\n\nexport const signUpStart = userCredentials => ({\n  type: UserActionTypes.EMAIL_SIGN_UP_START,\n  payload: userCredentials\n});\nexport const signUpSuccess = ({\n  user,\n  additionalData\n}) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: {\n    user,\n    additionalData\n  }\n});\nexport const signUpFailure = error => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/redux/user/user.actions.js"],"names":["UserActionTypes","googleSignInStart","type","GOOGLE_SIGN_IN_START","signInSuccess","user","SIGN_IN_SUCCESS","payload","signInFailure","error","SIGN_IN_FAILURE","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","checkUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","signOutSuccess","SIGN_OUT_SUCCESS","signOutFailure","SIGN_OUT_FAILURE","signUpStart","userCredentials","EMAIL_SIGN_UP_START","signUpSuccess","additionalData","SIGN_UP_SUCCESS","signUpFailure","SIGN_UP_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACpCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADc,CAAP,CAA1B;AAIP,OAAO,MAAMC,aAAa,GAAGC,IAAI,KAAK;AAClCH,EAAAA,IAAI,EAAEF,eAAe,CAACM,eADY;AAElCC,EAAAA,OAAO,EAAEF;AAFyB,CAAL,CAA1B;AAKP,OAAO,MAAMG,aAAa,GAAGC,KAAK,KAAK;AACnCP,EAAAA,IAAI,EAAEF,eAAe,CAACU,eADa;AAEnCH,EAAAA,OAAO,EAAEE;AAF0B,CAAL,CAA3B,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAAGC,gBAAgB,KAAK;AACjDV,EAAAA,IAAI,EAAEF,eAAe,CAACa,mBAD2B;AAEjDN,EAAAA,OAAO,EAAEK;AAFwC,CAAL,CAAzC;AAKP,OAAO,MAAME,gBAAgB,GAAG,OAAO;AACnCZ,EAAAA,IAAI,EAAEF,eAAe,CAACe;AADa,CAAP,CAAzB;AAIP,OAAO,MAAMC,YAAY,GAAG,OAAO;AAC/Bd,EAAAA,IAAI,EAAEF,eAAe,CAACiB;AADS,CAAP,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAG,OAAO;AACjChB,EAAAA,IAAI,EAAEF,eAAe,CAACmB;AADW,CAAP,CAAvB;AAIP,OAAO,MAAMC,cAAc,GAAIX,KAAD,KAAY;AACtCP,EAAAA,IAAI,EAAEF,eAAe,CAACqB,gBADgB;AAEtCd,EAAAA,OAAO,EAAEE;AAF6B,CAAZ,CAAvB,C,CAKP;;AACA,OAAO,MAAMa,WAAW,GAAIC,eAAD,KAAsB;AAC7CrB,EAAAA,IAAI,EAAEF,eAAe,CAACwB,mBADuB;AAE7CjB,EAAAA,OAAO,EAAEgB;AAFoC,CAAtB,CAApB;AAKP,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEpB,EAAAA,IAAF;AAAQqB,EAAAA;AAAR,CAAD,MAA+B;AACxDxB,EAAAA,IAAI,EAAEF,eAAe,CAAC2B,eADkC;AAExDpB,EAAAA,OAAO,EAAE;AAAEF,IAAAA,IAAF;AAAQqB,IAAAA;AAAR;AAF+C,CAA/B,CAAtB;AAKP,OAAO,MAAME,aAAa,GAAGnB,KAAK,KAAK;AACnCP,EAAAA,IAAI,EAAEF,eAAe,CAAC6B,eADa;AAEnCtB,EAAAA,OAAO,EAAEE;AAF0B,CAAL,CAA3B","sourcesContent":["import UserActionTypes from './user.types';\n\n// fire off the actions hold that snapShot object,\n// we used to store in our state at 'firebase.utils'\n// this action function '{ signInSuccess }' return objects\n// each object in the format that action expected it to be\n\nexport const googleSignInStart = () => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\n\nexport const signInSuccess = user => ({\n    type: UserActionTypes.SIGN_IN_SUCCESS,\n    payload: user\n});\n\nexport const signInFailure = error => ({\n    type: UserActionTypes.SIGN_IN_FAILURE,\n    payload: error\n});\n\n// email have to take the password value user passed in\nexport const emailSignInStart = emailAndPassword => ({\n    type: UserActionTypes.EMAIL_SIGN_IN_START,\n    payload: emailAndPassword\n});\n\nexport const checkUserSession = () => ({\n    type: UserActionTypes.CHECK_USER_SESSION\n});\n\nexport const signOutStart = () => ({\n    type: UserActionTypes.SIGN_OUT_START\n});\n\nexport const signOutSuccess = () => ({\n    type: UserActionTypes.SIGN_OUT_SUCCESS\n});\n\nexport const signOutFailure = (error) => ({\n    type: UserActionTypes.SIGN_OUT_FAILURE,\n    payload: error\n});\n\n// email have to take the password value user passed in\nexport const signUpStart = (userCredentials) => ({\n    type: UserActionTypes.EMAIL_SIGN_UP_START,\n    payload: userCredentials\n});\n\nexport const signUpSuccess = ({ user, additionalData }) => ({\n    type: UserActionTypes.SIGN_UP_SUCCESS,\n    payload: { user, additionalData }\n});\n\nexport const signUpFailure = error => ({\n    type: UserActionTypes.SIGN_UP_FAILURE,\n    payload: error\n});\n\n\n"]},"metadata":{},"sourceType":"module"}