{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/components/header/header.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { signOutStart } from '../../redux/user/user.actions';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\";\nimport { HeaderContainer, LogoContainer, OptionContainer, OptionLink } from './header.styles'; // destructure the current state into the header\n// see it's signin or sign out\n\nconst Header = ({\n  currentUser,\n  hidden,\n  signOutStart\n}) => /*#__PURE__*/React.createElement(HeaderContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(LogoContainer, {\n  to: \"/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Logo, {\n  className: \"logo\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(OptionContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(OptionLink, {\n  to: \"/shop\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }\n}, \"SHOP\"), /*#__PURE__*/React.createElement(OptionLink, {\n  to: \"/shop\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }\n}, \"CONTACT\"), currentUser ? /*#__PURE__*/React.createElement(OptionLink, {\n  as: \"div\",\n  onClick: signOutStart,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 16\n  }\n}, \"SIGN OUT\") : /*#__PURE__*/React.createElement(OptionLink, {\n  to: \"signin\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 15\n  }\n}, \"SIGN IN\"), /*#__PURE__*/React.createElement(CartIcon, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }\n})), hidden ? null : /*#__PURE__*/React.createElement(CartDropdown, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 27\n  }\n})); // pass the root reducer then get the current state \n// from it's children reducer\n// construct mutiple states from root reducer\n// passing our state into the selectors\n// by setting state as an object and point to corresponded selector\n// optimize by using {createStructuredSelector} to passing 'state'\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOutStart: () => dispatch(signOutStart())\n}); // get the current state for header\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/components/header/header.component.jsx"],"names":["React","connect","createStructuredSelector","auth","CartIcon","CartDropdown","selectCartHidden","selectCurrentUser","signOutStart","HeaderContainer","LogoContainer","OptionContainer","OptionLink","Header","currentUser","hidden","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,IAAT,QAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,YAAT,QAA6B,+BAA7B;;AAIA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,eAAzC,EAA0DC,UAA1D,QAA4E,iBAA5E,C,CAEA;AACA;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,MAAf;AAAuBP,EAAAA;AAAvB,CAAD,kBACX,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,aAAD;AAAe,EAAA,EAAE,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,eAII,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAII,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,EAQMM,WAAW,gBACV,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,KAAf;AAAqB,EAAA,OAAO,EAAEN,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,gBAKX,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbN,eAkBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAlBJ,CAJJ,EAwBMO,MAAM,GAAG,IAAH,gBAAU,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxBtB,CADJ,C,CA6BA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAGd,wBAAwB,CAAC;AAC/CY,EAAAA,WAAW,EAAGP,iBADiC;AAE/CQ,EAAAA,MAAM,EAAGT;AAFsC,CAAD,CAAhD;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCV,EAAAA,YAAY,EAAE,MAAMU,QAAQ,CAACV,YAAY,EAAb;AADU,CAAL,CAAnC,C,CAIA;;;AACA,eAAeP,OAAO,CACpBe,eADoB,EAEpBC,kBAFoB,CAAP,CAGbJ,MAHa,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { signOutStart } from '../../redux/user/user.actions';\n\nimport { ReactComponent as Logo } from '../../assets/crown.svg';\n\nimport { HeaderContainer, LogoContainer, OptionContainer, OptionLink } from './header.styles';\n\n// destructure the current state into the header\n// see it's signin or sign out\nconst Header = ({ currentUser, hidden, signOutStart }) => (\n    <HeaderContainer>\n        <LogoContainer to=\"/\">\n            <Logo className='logo' />\n        </LogoContainer>\n        <OptionContainer>\n            <OptionLink to='/shop'>\n                SHOP\n            </OptionLink>\n            <OptionLink to='/shop'>\n                CONTACT\n            </OptionLink>\n            {\n              currentUser ?\n              (<OptionLink as='div' onClick={signOutStart}>\n                SIGN OUT\n              </OptionLink>\n              ) : (\n              <OptionLink to='signin'>\n                SIGN IN\n              </OptionLink>\n              )\n            }\n            <CartIcon />\n        </OptionContainer>\n        { hidden ? null : <CartDropdown /> }\n    </HeaderContainer>\n);\n\n// pass the root reducer then get the current state \n// from it's children reducer\n// construct mutiple states from root reducer\n// passing our state into the selectors\n// by setting state as an object and point to corresponded selector\n// optimize by using {createStructuredSelector} to passing 'state'\nconst mapStateToProps = createStructuredSelector({\n  currentUser : selectCurrentUser,\n  hidden : selectCartHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOutStart: () => dispatch(signOutStart())\n});\n\n// get the current state for header\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps\n)(Header);"]},"metadata":{},"sourceType":"module"}