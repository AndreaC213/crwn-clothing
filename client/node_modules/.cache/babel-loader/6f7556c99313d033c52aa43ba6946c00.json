{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './cart-dropdown.styles.scss'; // addItem\n// step 12.\n// call { cartItems } then it will connect 'cartItems reducer' and \n// { map } all the current cart item display by { CartItem }\n// ? true : false (also 0: present false in JavaScript)\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 17\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('./checkout');\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, \"GO TO CHECKOUT\")); // addItem\n// step 11. we need to pull out the items from reducer and \n// connect 'cart-dropdown.component' to current 'cart-item.component'\n// then dispatch the reducer and get the current state of\n// the current component 'cart-dropdown'\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); // wrape {connect} inside {withRouter}\n// passed down the context to all its children\n// which is history and location (path)\n// connect pass dispatch into our component as a prop\n// if we do not supply second argument into connect()\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAO,6BAAP,C,CAGA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADH,gBAKG;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANR,CADJ,eAUI,oBAAC,YAAD;AACA,EAAA,OAAO,EAAE,MAAM;AACXJ,IAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACAL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACH,GAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,CADJ,C,CAsBA;AACA;AACA;AACA;AACA;;;AACA,MAAMU,eAAe,GAAGf,wBAAwB,CAAC;AAC7CO,EAAAA,SAAS,EAAGH;AADiC,CAAD,CAAhD,C,CAIA;AACA;AACA;AACA;AACA;;AACA,eAAeH,UAAU,CAACF,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nimport './cart-dropdown.styles.scss';\n\n\n// addItem\n// step 12.\n// call { cartItems } then it will connect 'cartItems reducer' and \n// { map } all the current cart item display by { CartItem }\n// ? true : false (also 0: present false in JavaScript)\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n            {cartItems.length ? (\n                cartItems.map(cartItem => (\n                    <CartItem key={cartItem.id} item={cartItem} />\n                ))\n            ) : (\n                <span className='empty-message'>Your cart is empty</span>\n            )}\n        </div>\n        <CustomButton \n        onClick={() => {\n            history.push('./checkout');\n            dispatch(toggleCartHidden());\n        }}\n        >\n            GO TO CHECKOUT\n        </CustomButton>\n    </div>\n);\n\n// addItem\n// step 11. we need to pull out the items from reducer and \n// connect 'cart-dropdown.component' to current 'cart-item.component'\n// then dispatch the reducer and get the current state of\n// the current component 'cart-dropdown'\nconst mapStateToProps = createStructuredSelector({\n    cartItems : selectCartItems\n});\n\n// wrape {connect} inside {withRouter}\n// passed down the context to all its children\n// which is history and location (path)\n// connect pass dispatch into our component as a prop\n// if we do not supply second argument into connect()\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}