{"ast":null,"code":"import UserActionTypes from './user.types'; // fire off the actions hold that snapShot object,\n// we used to store in our state at 'firebase.utils'\n// this action function '{ setCurrentUser }' return objects\n// each object in the format that action expected it to be\n\nexport const setCurrentUser = user => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n});\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\nexport const googleSignInSuccess = user => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const googleSignInFailure = error => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n  payload: error\n}); // email have to take the password value user passed in\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n});\nexport const emailSignInSuccess = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_SUCCESS,\n  payload: emailAndPassword\n});\nexport const emailSignInFailure = error => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/redux/user/user.actions.js"],"names":["UserActionTypes","setCurrentUser","user","type","SET_CURRENT_USER","payload","googleSignInStart","GOOGLE_SIGN_IN_START","googleSignInSuccess","GOOGLE_SIGN_IN_SUCCESS","googleSignInFailure","error","GOOGLE_SIGN_IN_FAILURE","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","emailSignInSuccess","EMAIL_SIGN_IN_SUCCESS","emailSignInFailure","EMAIL_SIGN_IN_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAK;AACnCC,EAAAA,IAAI,EAAEH,eAAe,CAACI,gBADa;AAEnCC,EAAAA,OAAO,EAAEH;AAF0B,CAAL,CAA3B;AAKP,OAAO,MAAMI,iBAAiB,GAAG,OAAO;AACpCH,EAAAA,IAAI,EAAEH,eAAe,CAACO;AADc,CAAP,CAA1B;AAIP,OAAO,MAAMC,mBAAmB,GAAGN,IAAI,KAAK;AACxCC,EAAAA,IAAI,EAAEH,eAAe,CAACS,sBADkB;AAExCJ,EAAAA,OAAO,EAAEH;AAF+B,CAAL,CAAhC;AAKP,OAAO,MAAMQ,mBAAmB,GAAGC,KAAK,KAAK;AACzCR,EAAAA,IAAI,EAAEH,eAAe,CAACY,sBADmB;AAEzCP,EAAAA,OAAO,EAAEM;AAFgC,CAAL,CAAjC,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAAGC,gBAAgB,KAAK;AACjDX,EAAAA,IAAI,EAAEH,eAAe,CAACe,mBAD2B;AAEjDV,EAAAA,OAAO,EAAES;AAFwC,CAAL,CAAzC;AAKP,OAAO,MAAME,kBAAkB,GAAGF,gBAAgB,KAAK;AACnDX,EAAAA,IAAI,EAAEH,eAAe,CAACiB,qBAD6B;AAEnDZ,EAAAA,OAAO,EAAES;AAF0C,CAAL,CAA3C;AAKP,OAAO,MAAMI,kBAAkB,GAAGP,KAAK,KAAK;AACxCR,EAAAA,IAAI,EAAEH,eAAe,CAACmB,qBADkB;AAExCd,EAAAA,OAAO,EAAEM;AAF+B,CAAL,CAAhC","sourcesContent":["import UserActionTypes from './user.types';\n\n// fire off the actions hold that snapShot object,\n// we used to store in our state at 'firebase.utils'\n// this action function '{ setCurrentUser }' return objects\n// each object in the format that action expected it to be\nexport const setCurrentUser = user => ({\n    type: UserActionTypes.SET_CURRENT_USER,\n    payload: user\n});\n\nexport const googleSignInStart = () => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\n\nexport const googleSignInSuccess = user => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n    payload: user\n});\n\nexport const googleSignInFailure = error => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n    payload: error\n});\n\n// email have to take the password value user passed in\nexport const emailSignInStart = emailAndPassword => ({\n    type: UserActionTypes.EMAIL_SIGN_IN_START,\n    payload: emailAndPassword\n});\n\nexport const emailSignInSuccess = emailAndPassword => ({\n    type: UserActionTypes.EMAIL_SIGN_IN_SUCCESS,\n    payload: emailAndPassword\n});\n\nexport const emailSignInFailure = error => ({\n    type: UserActionTypes.EMAIL_SIGN_IN_FAILURE,\n    payload: error\n});"]},"metadata":{},"sourceType":"module"}