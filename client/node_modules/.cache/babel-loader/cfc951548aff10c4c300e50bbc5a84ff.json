{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\nimport { GlobalStyle } from './global.styles';\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { selectCollectionForPreview } from './redux/shop/shop.selectors'; // how do we confirm the access by google sign in\n// function -> class to acess state\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  // Get persistence of our user section\n  // get promise from auth by using 'createUserProfileDocument' from firebase\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        // if user not in firestore create one then return userRef\n        const userRef = await createUserProfileDocument(userAuth); // subscribe to this userRef\n        // then set state for current user by using onSnapshop and .data() and\n        // 'action.js'\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } // log out \n      else {\n          setCurrentUser(userAuth);\n        }\n    });\n  } // want to sign out -> get this subscribe unmount\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  } // pass current state as a property\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // getting current user form redux state\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); // getting back the object from action by using 'dispatch'\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","Header","GlobalStyle","auth","createUserProfileDocument","addCollectionAndDocuments","setCurrentUser","selectCurrentUser","selectCollectionForPreview","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAuC,kBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,yBAA1C,QAA2E,2BAA3E;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,0BAAT,QAA2C,6BAA3C,C,CAEA;AACA;;AACA,MAAMC,GAAN,SAAkBlB,KAAK,CAACmB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhC;AACA;AACAC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACN,MAAAA;AAAD,QAAmB,KAAKO,KAA9B;AAEA,SAAKF,mBAAL,GAA2BR,IAAI,CAACW,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAIA,QAAJ,EAAc;AAEZ;AACA,cAAMC,OAAO,GAAG,MAAMZ,yBAAyB,CAACW,QAAD,CAA/C,CAHY,CAKZ;AACA;AACA;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7BZ,UAAAA,cAAc,CAAC;AACXa,YAAAA,EAAE,EAAED,QAAQ,CAACC,EADF;AAEX,eAAGD,QAAQ,CAACE,IAAT;AAFQ,WAAD,CAAd;AAID,SALD;AAMD,OAdD,CAeA;AAfA,WAgBK;AACHd,UAAAA,cAAc,CAACS,QAAD,CAAd;AACD;AACF,KApB0B,CAA3B;AAqBD,GA7B+B,CA+BhC;;;AACAM,EAAAA,oBAAoB,GAAG;AACrB,SAAKV,mBAAL;AACD,GAlC+B,CAoChC;;;AACAW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEzB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKa,KAAL,CAAWU,WAAX,gBACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gBAGE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAHF,CADF;AAsBD;;AA5D+B,C,CAgElC;;;AACA,MAAMC,eAAe,GAAG5B,wBAAwB,CAAC;AAC/C2B,EAAAA,WAAW,EAAEhB;AADkC,CAAD,CAAhD,C,CAIA;;AACA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,cAAc,EAAEqB,IAAI,IAAID,QAAQ,CAACpB,cAAc,CAACqB,IAAD,CAAf;AADM,CAAL,CAAnC;;AAIA,eAAehC,OAAO,CACpB6B,eADoB,EAEpBC,kBAFoB,CAAP,CAIZhB,GAJY,CAAf","sourcesContent":["import React from 'react';\nimport {Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\n\nimport { GlobalStyle } from './global.styles';\n\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { selectCollectionForPreview } from './redux/shop/shop.selectors';\n\n// how do we confirm the access by google sign in\n// function -> class to acess state\nclass App extends React.Component {\n  unsubscribeFromAuth = null\n\n  // Get persistence of our user section\n  // get promise from auth by using 'createUserProfileDocument' from firebase\n  componentDidMount() {\n    const {setCurrentUser} = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n\n        // if user not in firestore create one then return userRef\n        const userRef = await createUserProfileDocument(userAuth);\n\n        // subscribe to this userRef\n        // then set state for current user by using onSnapshop and .data() and\n        // 'action.js'\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data()\n          });\n        });\n      }\n      // log out \n      else {\n        setCurrentUser(userAuth);\n      }\n    });\n  }\n\n  // want to sign out -> get this subscribe unmount\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  // pass current state as a property\n  render() {\n    return (\n      <div>\n        <GlobalStyle/>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage}/>\n          <Route path='/shop' component={ShopPage}/>\n          <Route exact path='/checkout' component={CheckoutPage}/>\n          <Route \n            exact \n            path='/signin' \n            render={() => \n              this.props.currentUser ? (\n                <Redirect to='/' />\n              ) : (\n                <SignInAndSignUpPage/>\n              )\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n  \n}\n\n// getting current user form redux state\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\n// getting back the object from action by using 'dispatch'\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps\n  )\n  (App);\n"]},"metadata":{},"sourceType":"module"}