{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport './cart-dropdown.styles.scss';\nimport { selectCartItems } from '../../redux/cart/cart.selectors'; // addItem\n// step 12.\n// call { cartItems } then it will connect 'cartItems reducer' and \n// { map } all the current cart item display by { CartItem }\n\nconst CartDropdown = ({\n  cartItems\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }\n}))), /*#__PURE__*/React.createElement(CustomButton, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, \"GO TO CHECKOUT\")); // addItem\n// step 11. we need to pull out the items from reducer and \n// connect 'cart-dropdown.component' to current 'cart-item.component'\n// then dispatch the reducer and get the current state of\n// the current component 'cart-dropdown'\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default connect(mapStateToProps)(CartDropdown);","map":{"version":3,"sources":["/Users/andrea/Desktop/Udemy/React/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","CustomButton","CartItem","selectCartItems","CartDropdown","cartItems","map","cartItem","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,OAAO,6BAAP;AACA,SAASC,eAAT,QAAgC,iCAAhC,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQA,SAAS,CAACC,GAAV,CAAcC,QAAQ,iBAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAFR,CADJ,eAOI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,CADJ,C,CAYA;AACA;AACA;AACA;AACA;;;AACA,MAAME,eAAe,GAAGT,wBAAwB,CAAC;AAC7CK,EAAAA,SAAS,EAAGF;AADiC,CAAD,CAAhD;AAIA,eAAeJ,OAAO,CAACU,eAAD,CAAP,CAAyBL,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\n\nimport './cart-dropdown.styles.scss';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\n\n// addItem\n// step 12.\n// call { cartItems } then it will connect 'cartItems reducer' and \n// { map } all the current cart item display by { CartItem }\nconst CartDropdown = ({ cartItems }) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n            {\n                cartItems.map(cartItem => (\n                    <CartItem key={cartItem.id} item={cartItem}/>\n            ))}\n        </div>\n        <CustomButton>GO TO CHECKOUT</CustomButton>\n    </div>\n);\n\n// addItem\n// step 11. we need to pull out the items from reducer and \n// connect 'cart-dropdown.component' to current 'cart-item.component'\n// then dispatch the reducer and get the current state of\n// the current component 'cart-dropdown'\nconst mapStateToProps = createStructuredSelector({\n    cartItems : selectCartItems\n});\n\nexport default connect(mapStateToProps)(CartDropdown);"]},"metadata":{},"sourceType":"module"}